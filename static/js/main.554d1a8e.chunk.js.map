{"version":3,"sources":["lib/fontawesome/library.ts","components/Header/Header.tsx","components/Navbar/Navbar.tsx","components/Gigs/Gigs.tsx","components/Home/Home.tsx","components/Listen/Listen.tsx","components/Footer/Footer.tsx","components/About/About.tsx","components/Gallery/Gallery.tsx","components/Booking/Booking.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["library","add","faFacebookSquare","faCaretUp","Header","className","href","Navbar","icon","Gigs","props","pastGigs","gigs","filter","gig","Date","date","upcomingGigs","length","map","idx","key","description","showPastGigs","Fragment","Home","Listen","src","width","height","scrolling","frameBorder","Footer","onClick","document","body","scrollTop","documentElement","About","Gallery","Booking","App","path","exact","Boolean","window","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"w0BAIAA,IAAQC,IAAIC,KACZF,IAAQC,IAAIE,K,gBCOGC,EARU,WACvB,OACE,yBAAKC,UAAU,UACb,uBAAGC,KAAK,IAAID,UAAU,SAAtB,kB,gBCkBSE,EApBU,WACvB,OACE,yBAAKF,UAAU,UACb,6BACE,uBAAGC,KAAK,MAAR,QACA,uBAAGA,KAAK,YAAR,UACA,uBAAGA,KAAK,UAAR,QACA,uBAAGA,KAAK,aAAR,WACA,uBAAGA,KAAK,WAAR,SACA,uBAAGA,KAAK,aAAR,YAEF,6BACE,uBAAGA,KAAK,wCACN,kBAAC,IAAD,CAAiBE,KAAM,CAAC,MAAO,yB,+BCoB1BC,EA/BgB,SAACC,GAC9B,IAAMC,EAAWC,EAAKC,QAAO,SAAAC,GAAG,OAAI,IAAIC,KAAKD,EAAIE,MAAQ,IAAID,QACvDE,EAAeL,EAAKC,QAAO,SAAAC,GAAG,OAAI,IAAIC,KAAKD,EAAIE,OAAS,IAAID,QAElE,OACE,yBAAKV,UAAU,QACb,6CACA,4BAEIO,EAAKM,OAAS,EACVD,EAAaE,KAAI,SAACL,EAAKM,GAAN,OACjB,wBAAIC,IAAG,cAASD,IAAhB,UAA2BN,EAAIE,KAA/B,YAAuCF,EAAIQ,iBAC3C,+CAGR,6BAEEZ,EAAMa,cAAgBZ,EAASO,OAAS,GAC1C,kBAAC,IAAMM,SAAP,KACE,yCACA,4BAEIb,EAASQ,KAAI,SAACL,EAAKM,GAAN,OACX,wBAAIC,IAAG,cAASD,IAAhB,UAA2BN,EAAIE,KAA/B,YAAuCF,EAAIQ,qBCb1CG,EAZQ,WACrB,OACE,yBAAKpB,UAAU,QACb,kBAAC,EAAD,CAAMkB,cAAc,IAEpB,yBAAKlB,UAAU,kBACb,yBAAKA,UAAU,yDCWRqB,G,MAfU,WACvB,OACE,yBAAKrB,UAAU,UACb,sCAEA,4BACEsB,IAAI,mJACJtB,UAAU,0BACVuB,MAAM,MAAMC,OAAO,MAAMC,UAAU,KAAKC,YAAY,SCM7CC,G,MAhBU,WAOvB,OACE,yBAAK3B,UAAU,UACb,sDACE,0BAAM4B,QARQ,WAClBC,SAASC,KAAKC,UAAY,EAC1BF,SAASG,gBAAgBD,UAAY,GAML/B,UAAU,kBAAtC,IAAwD,kBAAC,IAAD,CAAiBG,KAAK,kBCCvE8B,EATS,WACtB,OACE,yBAAKjC,UAAU,SACb,qCACA,kECCSkC,EATW,WACxB,OACE,yBAAKlC,UAAU,WACb,uCACA,+CCUSmC,EATW,WACxB,OACE,yBAAKnC,UAAU,SACb,uCACA,+CCwCSoC,EAtCO,WACpB,OACE,yBAAKpC,UAAU,iBACb,kBAAC,EAAD,MACA,kBAAC,EAAD,MAGA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOqC,KAAK,WACV,kBAAC,EAAD,OAGF,kBAAC,IAAD,CAAOA,KAAK,SACV,kBAAC,EAAD,CAAMnB,cAAc,KAGtB,kBAAC,IAAD,CAAOmB,KAAK,YACV,kBAAC,EAAD,OAGF,kBAAC,IAAD,CAAOA,KAAK,UACV,kBAAC,EAAD,OAGF,kBAAC,IAAD,CAAOA,KAAK,YACV,kBAAC,EAAD,OAGF,kBAAC,IAAD,CAAOA,KAAK,IAAIC,OAAK,GACnB,kBAAC,EAAD,QAIJ,kBAAC,EAAD,QCnCcC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCXNC,IAASC,OAAO,kBAAC,EAAD,MAAShB,SAASiB,eAAe,SDoI3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.554d1a8e.chunk.js","sourcesContent":["import {library} from '@fortawesome/fontawesome-svg-core'\nimport {faFacebookSquare} from '@fortawesome/free-brands-svg-icons'\nimport {faCaretUp} from '@fortawesome/free-solid-svg-icons'\n\nlibrary.add(faFacebookSquare);\nlibrary.add(faCaretUp);","import React from 'react';\nimport './Header.css';\n\n\nconst Header: React.FC = () => {\n  return (\n    <div className=\"header\">\n      <a href=\"/\" className=\"title\">La Scaraband</a>\n    </div>\n  );\n};\n\nexport default Header;\n","import React from 'react';\nimport './Navbar.css';\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\n\n\nconst Navbar: React.FC = () => {\n  return (\n    <div className=\"navbar\">\n      <div>\n        <a href=\"#/\">Home</a>\n        <a href=\"#/listen\">Listen</a>\n        <a href=\"#/gigs\">Gigs</a>\n        <a href=\"#/gallery\">Gallery</a>\n        <a href=\"#/about\">About</a>\n        <a href=\"#/booking\">Booking</a>\n      </div>\n      <div>\n        <a href=\"https://www.facebook.com/superscaras\">\n          <FontAwesomeIcon icon={['fab', 'facebook-square']}/>\n        </a>\n      </div>\n    </div>\n  );\n};\n\nexport default Navbar;\n","import React from 'react';\nimport gigs from '../../assets/gigs.json';\n\ninterface IProps {\n  showPastGigs: boolean;\n}\n\nconst Gigs: React.FC<IProps> = (props: IProps) => {\n  const pastGigs = gigs.filter(gig => new Date(gig.date) < new Date());\n  const upcomingGigs = gigs.filter(gig => new Date(gig.date) >= new Date());\n\n  return (\n    <div className=\"gigs\">\n      <h1>Upcoming gigs</h1>\n      <ul>\n        {\n          gigs.length > 0\n            ? upcomingGigs.map((gig, idx) =>\n              <li key={`gig-${idx}`}>{`${gig.date} ${gig.description}`}</li>)\n            : <li>Coming soon...</li>\n        }\n      </ul>\n      <br/>\n\n      {(props.showPastGigs && pastGigs.length > 0) &&\n      <React.Fragment>\n        <h1>Past gigs</h1>\n        <ul>\n          {\n            pastGigs.map((gig, idx) =>\n              <li key={`gig-${idx}`}>{`${gig.date} ${gig.description}`}</li>)\n          }\n        </ul>\n      </React.Fragment>}\n    </div>\n  );\n};\n\nexport default Gigs;\n","import React from 'react';\nimport './Home.css';\nimport Gigs from '../Gigs/Gigs';\n\n\nconst Home: React.FC = () => {\n  return (\n    <div className=\"home\">\n      <Gigs showPastGigs={false}/>\n\n      <div className=\"instagram-feed\">\n        <div className=\"elfsight-app-9528aeaf-dd19-42fe-ace8-6e614897d4a7\"/>\n      </div>\n    </div>\n  );\n};\n\nexport default Home;\n","import React from 'react';\nimport './Listen.css';\n\n// TODO:\n//  - embed bandcamp widget with single (as soon as released)\n//  - embed facebook videos\n\nconst Listen: React.FC = () => {\n  return (\n    <div className=\"listen\">\n      <h1>Listen</h1>\n\n      <iframe\n        src=\"https://www.facebook.com/plugins/video.php?href=https%3A%2F%2Fwww.facebook.com%2Fsuperscaras%2Fvideos%2F657849404639648%2F&show_text=0&width=560\"\n        className=\"facebook-embedded-video\"\n        width=\"560\" height=\"315\" scrolling=\"no\" frameBorder=\"0\"\n        >\n      </iframe>\n    </div>\n  );\n};\n\nexport default Listen;\n","import React from 'react';\nimport './Footer.css';\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\n\n\nconst Footer: React.FC = () => {\n\n  const scrollToTop = (): void => {\n    document.body.scrollTop = 0; // Safari\n    document.documentElement.scrollTop = 0; // Chrome, Firefox, IE and Opera\n  };\n\n  return (\n    <div className=\"footer\">\n      <p>Â© 2020 by lascaraband\n        <span onClick={scrollToTop} className=\"scroll-up-icon\"> <FontAwesomeIcon icon=\"caret-up\"/></span>\n      </p>\n    </div>\n  );\n};\n\nexport default Footer;\n","import React from 'react';\n\n\n// TODO:\n//  - description text\n//  - pics and names of band members\n\nconst About: React.FC = () => {\n  return (\n    <div className=\"about\">\n      <h1>About</h1>\n      <p>La Scaraband was born in 2016 ...</p>\n    </div>\n  );\n};\n\nexport default About;\n","import React from 'react';\n\n\nconst Gallery: React.FC = () => {\n  return (\n    <div className=\"gallery\">\n      <h1>Gallery</h1>\n      <p>coming soon...</p>\n    </div>\n  );\n};\n\nexport default Gallery;\n","import React from 'react';\n\n\n// TODO:\n//  - message us on facebook\n//  - tech rider\n//  - text and pictures\n\nconst Booking: React.FC = () => {\n  return (\n    <div className=\"about\">\n      <h1>Booking</h1>\n      <p>coming soon...</p>\n    </div>\n  );\n};\n\nexport default Booking;\n","import React from 'react';\nimport './App.css';\nimport Header from './components/Header/Header';\nimport Navbar from './components/Navbar/Navbar';\nimport {HashRouter, Route} from 'react-router-dom';\nimport Home from './components/Home/Home';\nimport Gigs from './components/Gigs/Gigs';\nimport Listen from './components/Listen/Listen';\nimport Footer from './components/Footer/Footer';\nimport About from './components/About/About';\nimport Gallery from './components/Gallery/Gallery';\nimport Booking from './components/Booking/Booking';\n\n\nconst App: React.FC = () => {\n  return (\n    <div className=\"app-container\">\n      <Header/>\n      <Navbar/>\n\n      {/* TODO: fix show home if unknown route */}\n      <HashRouter>\n        <Route path=\"/listen\">\n          <Listen/>\n        </Route>\n\n        <Route path=\"/gigs\">\n          <Gigs showPastGigs={true}/>\n        </Route>\n\n        <Route path=\"/gallery\">\n          <Gallery/>\n        </Route>\n\n        <Route path=\"/about\">\n          <About/>\n        </Route>\n\n        <Route path=\"/booking\">\n          <Booking/>\n        </Route>\n\n        <Route path=\"/\" exact>\n          <Home/>\n        </Route>\n      </HashRouter>\n\n      <Footer/>\n    </div>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport './lib/fontawesome/library';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}